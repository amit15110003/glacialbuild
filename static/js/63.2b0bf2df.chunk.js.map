{"version":3,"sources":["Demo/Hotel/Hotels/hotelList.js","Demo/Global/Api.js"],"names":["hotelList","props","fetch","setState","loading","api","get","then","res","hotel","data","onSelectChange","selectedRowKeys","console","log","showModal","visible","handleToggleStatus","id","hotel_status","a","async","patch","type","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","state","searchText","autoEscape","textToHighlight","searchedColumn","hoteldetail","city","propertytype","isEditProduct","this","columns","title","key","defaultSortOrder","sorter","b","val","to","rowSelection","hasSelected","length","disabled","href","float","marginLeft","bordered","dataSource","scroll","x","React","Component","axios","create","baseURL","headers","Authorization","localStorage","getItem"],"mappings":"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","file":"static/js/63.2b0bf2df.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Table, Input, Button, Icon, Divider,Switch} from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport api from '../../Global/Api';\r\n\r\nclass hotelList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedRowKeys: [],   //Check here to configure the default column\r\n      loading: false,\r\n      hotel: [],\r\n      searchedColumn: '',\r\n      hoteldetail:{},\r\n      city:[],\r\n      propertytype:[],\r\n      isEditProduct: false,\r\n    };\r\n  }\r\n\r\ncomponentDidMount() {\r\n  this.fetch();\r\n}\r\n\r\n\r\nfetch = () => {\r\n  this.setState({ loading: true });\r\n  api.get(`/api/hotel`,{}).then(res => {\r\n      this.setState({\r\n        loading: false,\r\n        hotel: res.data,\r\n      });\r\n    });\r\n};\r\n  \r\nonSelectChange = selectedRowKeys => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  \r\n\r\n\r\nhandleToggleStatus= async(id,hotel_status) =>{\r\n    this.setState({ loading:true});\r\n    await api.patch(`/api/hotel/${id}`,{hotel_status: hotel_status?false:true,\r\n         type: 'json',\r\n     })\r\n    .then(res => {\r\n      this.setState({\r\n\r\n      });\r\n    this.fetch();\r\n    });\r\n\r\n   }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`Search ${dataIndex}`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n            icon=\"search\"\r\n            size=\"small\"\r\n            style={{ width: 90, marginRight: 8 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      ),\r\n      filterIcon: filtered => (\r\n        <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n      ),\r\n      onFilter: (value, record) =>\r\n        record[dataIndex]\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(value.toLowerCase()),\r\n      onFilterDropdownVisibleChange: visible => {\r\n        if (visible) {\r\n          setTimeout(() => this.searchInput.select());\r\n        }\r\n      },\r\n      render: text => (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ),\r\n  });\r\n\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const columns = [{\r\n      dataIndex: 'id',\r\n      title: 'Hotel Id',\r\n      key:'Id',\r\n      defaultSortOrder: 'ascend',\r\n      sorter: (a, b) => a.id - b.id,\r\n      },\r\n      {\r\n        dataIndex: 'hotel_name',\r\n        title: 'Hotel Name',\r\n        key: 'hotel_name',\r\n        ...this.getColumnSearchProps('hotel_name'),\r\n      },\r\n      {\r\n        dataIndex: 'hotel_email',\r\n        title: 'Hotel Email',\r\n        key: 'hotel_email',\r\n      },\r\n      {\r\n        dataIndex: 'city.city_name',\r\n        title: 'City',\r\n        key: 'city_name',\r\n      },\r\n      {\r\n        dataIndex: 'hotel_contact',\r\n        title: 'Hotel Contact',\r\n        key: 'hotel_contact',\r\n      },\r\n      {\r\n        dataIndex: 'hotel_status',\r\n        title: 'Status',\r\n        key: 'status' ,\r\n        render: val => (val ? 'Active' : 'Inactive')\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (record) => (\r\n            <span>\r\n            {/* <Switch checked={record.hotel_status?true:false} onChange={() => this.handleToggleStatus(record.id,record.hotel_status)} /> */}\r\n            {/* <Popconfirm title=\"Sure to change status?\" onConfirm={() => this.handleToggleStatus(record.id,record.is_active)}>\r\n              <a>Change Status</a>\r\n            </Popconfirm> */}\r\n            <Divider type=\"vertical\" />\r\n            <Link to={`/hotel/hotelform/${record.id}`}>Edit</Link>\r\n             <Divider type=\"vertical\"/>\r\n           <Link to={`/hotel/hotelimg/${record.id}`}>Upload Image</Link>\r\n          </span>\r\n          ),\r\n\r\n      }\r\n    ];\r\n\r\n    const { loading, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      \r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Button type=\"primary\"  disabled={!hasSelected} loading={loading}>\r\n            Delete\r\n          </Button>\r\n          <Button href=\"/hotel/hotelform/\" type=\"primary\" style={{float:\"right\"}}>\r\n           Create\r\n          </Button>\r\n        {/* <Modal\r\n          title=\"User Login Form\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n        <WrappedRegistrationForm isEditProduct={this.state.isEditProduct} userdetail={this.state.userdata} handleOk={this.handleOk} fetch={this.fetch}/>\r\n        </Modal> */}\r\n          <span style={{ marginLeft: 8 }}>\r\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\r\n          </span>\r\n        </div>\r\n        <Table bordered rowSelection={rowSelection} columns={columns} dataSource={this.state.hotel} scroll={{ x: 'max-content' }}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default hotelList;\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({    \r\n    baseURL:'http://34.93.135.63/',\r\n    headers: {\r\n    Authorization: `JWT ${localStorage.getItem('token')}`\r\n    }\r\n});\r\n"],"sourceRoot":""}