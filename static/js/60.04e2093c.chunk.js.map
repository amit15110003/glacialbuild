{"version":3,"sources":["../popconfirm/index.jsx","Demo/User/group/group.js","Demo/Global/Api.js"],"names":["__rest","s","e","t","Object","i","p","Popconfirm","onConfirm","onCancel","okButtonProps","cancelButtonProps","title","cancelText","okText","okType","icon","className","onClick","size","popconfirmLocale","type","getPrefixCls","_a","customizePrefixCls","placement","restProps","prefixCls","overlay","componentName","defaultLocale","onVisibleChange","visible","ref","saveTooltip","props","nextProps","defaultVisible","this","tooltip","React","transitionName","trigger","theme","disabled","polyfill","Group","fetch","setState","loading","api","get","then","res","group","data","fetchpermissions","permission","onSelectChange","selectedRowKeys","console","log","showModal","handleChange","id","a","async","groupdata","isEditProduct","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","node","searchInput","placeholder","value","onChange","target","onPressEnter","handleSearch","width","marginBottom","display","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","state","searchText","autoEscape","textToHighlight","searchedColumn","handleDelete","delete","groupdetail","columns","key","defaultSortOrder","sorter","b","to","rowSelection","hasSelected","length","href","float","marginLeft","bordered","dataSource","scroll","x","Component","axios","create","baseURL","headers","Authorization","localStorage","getItem"],"mappings":"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","file":"static/js/60.04e2093c.chunk.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tooltip from '../tooltip';\nimport Icon from '../icon';\nimport Button from '../button';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nclass Popconfirm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onConfirm = (e) => {\n            this.setVisible(false, e);\n            const { onConfirm } = this.props;\n            if (onConfirm) {\n                onConfirm.call(this, e);\n            }\n        };\n        this.onCancel = (e) => {\n            this.setVisible(false, e);\n            const { onCancel } = this.props;\n            if (onCancel) {\n                onCancel.call(this, e);\n            }\n        };\n        this.onVisibleChange = (visible) => {\n            const { disabled } = this.props;\n            if (disabled) {\n                return;\n            }\n            this.setVisible(visible);\n        };\n        this.saveTooltip = (node) => {\n            this.tooltip = node;\n        };\n        this.renderOverlay = (prefixCls, popconfirmLocale) => {\n            const { okButtonProps, cancelButtonProps, title, cancelText, okText, okType, icon, } = this.props;\n            return (<div>\n        <div className={`${prefixCls}-inner-content`}>\n          <div className={`${prefixCls}-message`}>\n            {icon}\n            <div className={`${prefixCls}-message-title`}>{title}</div>\n          </div>\n          <div className={`${prefixCls}-buttons`}>\n            <Button onClick={this.onCancel} size=\"small\" {...cancelButtonProps}>\n              {cancelText || popconfirmLocale.cancelText}\n            </Button>\n            <Button onClick={this.onConfirm} type={okType} size=\"small\" {...okButtonProps}>\n              {okText || popconfirmLocale.okText}\n            </Button>\n          </div>\n        </div>\n      </div>);\n        };\n        this.renderConfirm = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, placement } = _a, restProps = __rest(_a, [\"prefixCls\", \"placement\"]);\n            const prefixCls = getPrefixCls('popover', customizePrefixCls);\n            const overlay = (<LocaleReceiver componentName=\"Popconfirm\" defaultLocale={defaultLocale.Popconfirm}>\n        {(popconfirmLocale) => this.renderOverlay(prefixCls, popconfirmLocale)}\n      </LocaleReceiver>);\n            return (<Tooltip {...restProps} prefixCls={prefixCls} placement={placement} onVisibleChange={this.onVisibleChange} visible={this.state.visible} overlay={overlay} ref={this.saveTooltip}/>);\n        };\n        this.state = {\n            visible: props.visible,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('visible' in nextProps) {\n            return { visible: nextProps.visible };\n        }\n        if ('defaultVisible' in nextProps) {\n            return { visible: nextProps.defaultVisible };\n        }\n        return null;\n    }\n    getPopupDomNode() {\n        return this.tooltip.getPopupDomNode();\n    }\n    setVisible(visible, e) {\n        const { props } = this;\n        if (!('visible' in props)) {\n            this.setState({ visible });\n        }\n        const { onVisibleChange } = props;\n        if (onVisibleChange) {\n            onVisibleChange(visible, e);\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderConfirm}</ConfigConsumer>;\n    }\n}\nPopconfirm.defaultProps = {\n    transitionName: 'zoom-big',\n    placement: 'top',\n    trigger: 'click',\n    okType: 'primary',\n    icon: <Icon type=\"exclamation-circle\" theme=\"filled\"/>,\n    disabled: false,\n};\npolyfill(Popconfirm);\nexport default Popconfirm;\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Icon, Divider, Popconfirm } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport api from '../../Global/Api';\r\n\r\n\r\nclass Group extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedRowKeys: [],   //Check here to configure the default column\r\n      loading: false,\r\n      group: [],\r\n      permission:'',\r\n      searchedColumn: '',\r\n      groupdetail:{},\r\n      isEditProduct: false,\r\n    };\r\n  }\r\n\r\ncomponentDidMount() {\r\n  this.fetch();\r\n  this.fetchpermissions();\r\n}\r\n\r\n\r\nfetch = (params = {}) => {\r\n  this.setState({ loading: true });\r\n  api.get(`/api/group`,{}).then(res => {\r\n      this.setState({\r\n        loading: false,\r\n        group: res.data,\r\n      });\r\n    });\r\n};\r\n\r\nfetchpermissions = (params = {}) => {\r\n  this.setState({ loading: true });\r\n  api.get(`/api/permission`,{}).then(res => {\r\n      this.setState({\r\n        loading: false,\r\n        permission: res.data,\r\n      });\r\n    });\r\n};\r\n  \r\n  onSelectChange = selectedRowKeys => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleChange= async (id)=>{\r\n    this.setState({ loading:true});\r\n    await api.get(`/api/group/${id}`, {})\r\n    .then(res => {\r\n      this.setState({\r\n        groupdata: res.data,\r\n        visible: true,\r\n        loading:false,\r\n        isEditProduct:true\r\n      });\r\n    });\r\n   };\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={node => {\r\n              this.searchInput = node;\r\n            }}\r\n            placeholder={`Search ${dataIndex}`}\r\n            value={selectedKeys[0]}\r\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n            icon=\"search\"\r\n            size=\"small\"\r\n            style={{ width: 90, marginRight: 8 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n      ),\r\n      filterIcon: filtered => (\r\n        <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n      ),\r\n      onFilter: (value, record) =>\r\n        record[dataIndex]\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(value.toLowerCase()),\r\n      onFilterDropdownVisibleChange: visible => {\r\n        if (visible) {\r\n          setTimeout(() => this.searchInput.select());\r\n        }\r\n      },\r\n      render: text => (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ),\r\n  });\r\n\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  handleDelete= async (id)=>{\r\n    this.setState({ loading:true});\r\n    await api.delete(`/api/group/${id}`, {});\r\n    this.fetch();\r\n    this.setState({loading:false});\r\n   };\r\n\r\n  render() {\r\n\r\n    const columns = [{\r\n      dataIndex: 'id',\r\n      title: 'Group Id',\r\n      key:'Id',\r\n      defaultSortOrder: 'ascend',\r\n      sorter: (a, b) => a.id - b.id,\r\n      },\r\n      {\r\n        dataIndex: 'name',\r\n        title: 'Group Name',\r\n        key: 'name',\r\n        ...this.getColumnSearchProps('name'),\r\n      },\r\n      {\r\n        dataIndex: 'id',\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text,record) => (\r\n          <span>\r\n            <Link to={`/user/groupform/${record.id}`}>Edit</Link>\r\n            <Divider type=\"vertical\"/>\r\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.id)}>\r\n              <a>Delete</a>\r\n           </Popconfirm>\r\n          </span>\r\n          ),\r\n        }\r\n    ];\r\n\r\n    const { loading, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      \r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Button type=\"primary\"  disabled={!hasSelected} loading={loading}>\r\n            Delete\r\n          </Button>\r\n          <Button href=\"/user/groupform/:GroupId\" type=\"primary\" style={{float:\"right\"}}>\r\n           Create\r\n          </Button>\r\n        {/* <WrappedRegistrationForm isEditProduct={this.state.isEditProduct} groupdetail={this.state.groupdata} fetch={this.fetch} permissiondata={this.state.permission}/> */}\r\n          <span style={{ marginLeft: 8 }}>\r\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\r\n          </span>\r\n        </div>\r\n        <Table bordered rowSelection={rowSelection} columns={columns} dataSource={this.state.group} scroll={{ x: 'max-content' }}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Group;\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({    \r\n    baseURL:'http://34.93.135.63/',\r\n    headers: {\r\n    Authorization: `JWT ${localStorage.getItem('token')}`\r\n    }\r\n});\r\n"],"sourceRoot":""}